// apps/api/prisma/schema.prisma

generator client {
  provider      = "prisma-client-js"
  // native = 在当前环境生成；另外显式包含 Mac 和 Alpine
  binaryTargets = ["native", "darwin-arm64", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========= User =========
model User {
  /// 用户ID
  id        String   @id @default(cuid()) @map("id") @db.VarChar(32)
  /// 创建时间
  createdAt DateTime @default(now()) @map("created_at")
  /// 更新时间
  updatedAt DateTime @updatedAt @map("updated_at")

  /// 昵称
  nickname   String? @map("nickname") @db.VarChar(100)
  /// 头像URL
  avatar     String? @map("avatar") @db.VarChar(255)
  phone      String  @unique @map("phone") @db.VarChar(20)
  phoneMd5   String  @map("phone_md5") @db.VarChar(32)
  /// 邀请码
  inviteCode String? @unique @map("invite_code") @db.VarChar(20)

  /// VIP等级
  vipLevel              Int       @default(0) @map("vip_level") @db.SmallInt
  /// KYC状态: 0-未认证 1-审核中 2-审核失败 3-待补充 4-已认证
  kycStatus             Int       @default(0) @map("kyc_status") @db.SmallInt
  deliveryAddressId     String?   @map("delivery_address_id")
  /// 自我排除过期时间戳
  selfExclusionExpireAt DateTime? @map("self_exclusion_expire_at") @db.Timestamptz(3)
  /// 最后登录时间戳
  lastLoginAt           DateTime? @map("last_login_at") @db.Timestamptz(3)

  /// 登录日志
  loginLogs             UserLoginLog[]
  /// 第三方账户
  oauthAccounts         OauthAccount[]
  /// 组团
  treasureGroupMembers  TreasureGroupMember[]
  /// 创建的组团
  createdTreasureGroups TreasureGroup[]

  @@index([phoneMd5], map: "idx_user_phone_md5")
  @@index([inviteCode], map: "idx_user_invite_code")
  @@index([kycStatus], map: "idx_user_kyc_status")
  @@map("users")
}

// ======== 用户登录日志 login=========
model UserLoginLog {
  id        String   @id @default(cuid()) @map("log_id") @db.VarChar(32)
  userId    String   @map("user_id") @db.VarChar(32)
  loginTime DateTime @map("login_time") @db.Timestamptz(3)
  createdAt DateTime @default(now()) @map("created_at")

  /// 登录类型: 1-密码登录 2-短信验证码 3-第三方登录
  loginType   Int     @map("login_type") @db.SmallInt
  /// 登录方式: password/google/facebook
  loginMethod String? @map("login_method") @db.VarChar(50)

  // 登录信息
  loginIp     String? @map("login_ip") @db.VarChar(50)
  loginDevice String? @map("login_device") @db.VarChar(100)
  userAgent   String? @map("user_agent") @db.Text
  deviceId    String? @map("device_id") @db.VarChar(100)

  // 位置信息
  countryCode String? @map("country_code") @db.VarChar(10)
  city        String? @map("city") @db.VarChar(100)

  // 登录状态
  loginStatus Int     @default(1) @map("login_status") @db.SmallInt
  failReason  String? @map("fail_reason") @db.VarChar(200)

  /// 是否颁发Token: 0-否 1-是
  tokenIssued Int @default(1) @map("token_issued") @db.SmallInt

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_login_log_user")
  @@index([loginTime], map: "idx_login_log_time")
  @@index([loginType], map: "idx_login_log_type")
  @@index([loginIp], map: "idx_login_log_ip")
  @@map("user_login_logs")
}

// ======== 第三方登录账户 third part login=========
model OauthAccount {
  id        String   @id @default(cuid()) @map("oauth_id") @db.VarChar(32)
  userId    String   @map("user_id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  /// 第三方平台: google/facebook/apple
  provider       String @map("provider") @db.VarChar(50)
  /// 第三方用户ID
  providerUserId String @map("provider_user_id") @db.VarChar(255)

  /// 第三方邮箱
  providerEmail    String? @map("provider_email") @db.VarChar(255)
  /// 第三方昵称
  providerNickname String? @map("provider_nickname") @db.VarChar(100)
  /// 第三方头像
  providerAvatar   String? @map("provider_avatar") @db.VarChar(255)

  /// 访问令牌
  accessToken    String?   @map("access_token") @db.Text
  /// 刷新令牌
  refreshToken   String?   @map("refresh_token") @db.Text
  tokenExpiresAt DateTime? @map("token_expires_at") @db.Timestamptz(3)
  /// 绑定状态: 0-已解绑 1-已绑定
  bindStatus     Int       @default(1) @map("bind_status") @db.SmallInt

  firstBindAt DateTime? @map("first_bind_at")
  lastLoginAt DateTime? @map("last_login_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerUserId], map: "uk_oauth_provider_user")
  @@index([userId], map: "idx_oauth_user")
  @@index([provider], map: "idx_oauth_provider")
  @@map("oauth_accounts")
}

// ======== 短信验证码 sms verification code=========
model SmsVerificationCode {
  id        String   @id @default(cuid()) @map("code_id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")

  phone       String @map("phone") @db.VarChar(20)
  countryCode String @default("63") @map("country_code") @db.VarChar(10)

  /// 验证码
  codeHash String @map("code_hash") @db.VarChar(100)
  /// 验证码类型: 1-注册 2-登录 3-修改密码 4-绑定手机 5-提现
  codeType Int    @map("code_type") @db.SmallInt

  /// 发送状态: 1-待发送 2-已发送 3-发送失败
  sendStatus   Int     @default(1) @map("send_status") @db.SmallInt
  /// 发送结果
  sendResult   String? @map("send_result") @db.Text
  /// 短信服务商
  smsProvider  String? @map("sms_provider") @db.VarChar(50)
  /// 短信消息ID
  smsMessageId String? @map("sms_message_id") @db.VarChar(100)

  /// 验证状态: 0-未验证 1-已验证 2-已过期
  verifyStatus   Int @default(0) @map("verify_status") @db.SmallInt
  /// 验证次数
  verifyTimes    Int @default(0) @map("verify_times")
  /// 最大验证次数
  maxVerifyTimes Int @default(5) @map("max_verify_times")

  expiresAt  DateTime  @map("expires_at")
  verifiedAt DateTime? @map("verified_at")

  /// 请求IP
  requestIp String? @map("request_ip") @db.VarChar(100)

  @@index([phone], map: "idx_sms_phone")
  @@index([codeType], map: "idx_sms_code_type")
  @@index([verifyStatus], map: "idx_sms_verify_status")
  @@index([expiresAt], map: "idx_sms_expires_at")
  @@index([createdAt], map: "idx_sms_created_at")
  @@map("sms_verification_codes")
}

/// ======= 抽奖产品列表=========
/// 抽奖产品表
model Treasure {
  id        String   @id @default(cuid()) @map("treasure_id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  ///产品序列号
  treasureSeq      String? @unique @map("treasure_seq") @db.VarChar(50)
  ///产品名称
  treasureName     String  @map("treasure_name") @db.VarChar(200)
  ///实物产品名称
  productName      String? @map("product_name") @db.VarChar(200)
  ///封面图URL
  treasureCoverImg String? @map("treasure_cover_img") @db.VarChar(255)
  ///主图列表（JSON数组）
  mainImageList    Json?   @map("main_image_list")

  ///产品成本（PHP）
  costAmount Decimal? @map("cost_amount") @db.Decimal(10, 2)
  ///单价/每份（PHP）
  unitAmount Decimal  @default(1.00) @map("unit_amount") @db.Decimal(10, 2)
  ///现金奖励金额
  cashAmount Decimal? @map("cash_amount") @db.Decimal(10, 2)

  ///总库存/总份数
  seqShelvesQuantity Int?     @map("seq_shelves_quantity")
  ///已购买数量
  seqBuyQuantity     Int      @default(0) @map("seq_buy_quantity")
  ///最小购买量（开奖所需份数）
  minBuyQuantity     Int?     @map("min_buy_quantity")
  ///单人最大购买量
  maxPerBuyQuantity  Int?     @map("max_per_buy_quantity")
  ///购买率百分比
  buyQuantityRate    Decimal? @map("buy_quantity_rate") @db.Decimal(5, 2)

  ///抽奖模式: 1-售罄模式 2-定时模式
  lotteryMode       Int?      @map("lottery_mode") @db.SmallInt
  ///开奖时间戳
  lotteryTime       DateTime? @map("lottery_time") @db.Timestamp(3)
  ///延迟开奖时间
  lotteryDelayTime  DateTime? @map("lottery_delay_time") @db.Timestamp(3)
  ///'是否延迟: 0-否 1-是
  lotteryDelayState Int       @default(0) @map("lottery_delay_state") @db.SmallInt /// 0=否 1=是

  ///图片样式类型
  imgStyleType Int @default(0) @map("img_style_type") @db.SmallInt
  ///是否虚拟产品: 1-虚拟 2-实物
  virtual      Int @default(2) @map("virtual") @db.SmallInt /// 1=虚拟 2=实物

  ///组团最大人数
  groupMaxNum Int @default(9999) @map("group_max_num")

  ///单份最大使用金币数
  maxUnitCoins  Decimal? @map("max_unit_coins") @db.Decimal(10, 4)
  ///最大折扣金额
  maxUnitAmount Decimal? @map("max_unit_amount") @db.Decimal(10, 2)

  /// 慈善金额
  charityAmount Decimal? @map("charity_amount") @db.Decimal(10, 2)
  /// 现金状态
  cashState     Int?     @map("cash_state") @db.SmallInt
  ///规则说明（HTML）
  ruleContent   String?  @map("rule_content") @db.Text
  ///产品描述（HTML）
  desc          String?  @map("desc") @db.Text
  ///状态: 0-下架 1-上架
  state         Int      @default(1) @map("state") @db.SmallInt /// 0=下架 1=上架

  // 关系
  categories TreasureCategory[]
  groups     TreasureGroup[]

  @@index([lotteryMode])
  @@index([lotteryTime])
  @@index([state])
  @@index([buyQuantityRate])
  @@map("treasures")
}

/// 产品分类表
model ProductCategory {
  id        Int      @id @default(autoincrement()) @map("products_category_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  ///分类名称
  name      String  @db.VarChar(100)
  ///分类英文名
  nameEn    String? @map("name_en") @db.VarChar(100)
  ///分类图标URL
  icon      String? @db.VarChar(255)
  ///排序值（越小越靠前）
  sortOrder Int     @default(0) @map("sort_order")
  ///状态: 0-禁用 1-启用
  state     Int     @default(1) @db.SmallInt

  treasures TreasureCategory[]

  @@index([state], map: "idx_state")
  @@index([sortOrder], map: "idx_sort")
  @@map("product_categories")
}

/// 产品-分类 多对多
model TreasureCategory {
  id        String   @id @default(cuid()) @map("id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")

  ///产品ID
  treasureId String @map("treasure_id") @db.VarChar(32)
  ///分类ID
  categoryId Int    @map("category_id")

  treasure Treasure        @relation(fields: [treasureId], references: [id], onDelete: Cascade)
  category ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([treasureId, categoryId], map: "uk_treasure_category")
  @@index([treasureId], map: "idx_treasure_id")
  @@index([categoryId], map: "idx_category_id")
  @@map("treasure_categories")
}

/// 组团表
model TreasureGroup {
  id        String   @id @default(cuid()) @map("group_id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  ///产品ID
  treasureId String @map("treasure_id") @db.VarChar(32)
  ///创建人用户ID（团长）
  creatorId  String @map("creator_id") @db.VarChar(32)

  ///组团名称
  groupName         String? @map("group_name") @db.VarChar(100)
  ///最大成员数
  maxMembers        Int     @default(9999) @map("max_members")
  ///当前成员数
  currentMembers    Int     @default(1) @map("current_members")
  ///组内中奖次数
  luckyWinnersCount Int     @default(0) @map("lucky_winners_count")
  ///总中奖次数
  totalWinningTimes Int     @default(0) @map("total_winning_times")
  ///状态: 1-进行中 2-已结束
  groupStatus       Int     @default(1) @map("group_status") @db.SmallInt /// 1=进行中 2=已结束

  treasure Treasure              @relation(fields: [treasureId], references: [id], onDelete: Cascade)
  creator  User                  @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  members  TreasureGroupMember[]

  @@index([treasureId], map: "idx_treasure")
  @@index([creatorId], map: "idx_creator")
  @@index([groupStatus], map: "idx_status")
  @@map("treasure_groups")
}

/// 组团成员
model TreasureGroupMember {
  ///成员记录ID
  id        String   @id @default(cuid()) @map("id") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")

  ///组团ID
  groupId String  @map("group_id") @db.VarChar(32)
  userId  String  @map("user_id") @db.VarChar(32)
  orderId String? @map("order_id") @db.VarChar(32)

  ///是否团长: 0-否 1-是
  isOwner     Int       @default(0) @map("is_owner") @db.SmallInt
  ///分享获得金额
  shareCoin   Decimal   @default(0) @map("share_coin") @db.Decimal(10, 2)
  ///分享获得金额
  shareAmount Decimal   @default(0) @map("share_amount") @db.Decimal(10, 2)
  joinedAt    DateTime? @map("joined_at") @db.Timestamp(3)

  group TreasureGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  user  User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([groupId, userId], map: "uk_group_user")
  @@index([groupId], map: "idx_group")
  @@index([userId], map: "idx_user")
  @@index([orderId], map: "idx_order")
  @@map("treasure_group_members")
}
