// apps/api/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========== User ==========
model User {
  id          String  @id @default(cuid())
  phone       String  @unique
  phoneMd5    String  @db.VarChar(32)
  username    String? @unique
  nickname    String?
  avatarUrl   String?
  countryCode Int?

  inviteCode String? @unique
  vipLevel   Int     @default(0)

  kycStatus              KycStatus @default(PENDING)
  selfExclusionExpiresAt DateTime?

  lastLoginAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  credentials   UserCredential?
  loginEvents   LoginEvent[]
  otpRequests   OtpRequest[]
  addresses     Address[]
  refreshTokens RefreshToken[]
  revokedTokens RevokedToken[]

  @@index([phoneMd5])
  @@index([lastLoginAt])
}

enum KycStatus {
  PENDING
  REVIEW
  REJECTED
  APPROVED
  VERIFIED
}

model UserCredential {
  userId            String    @id
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  passwordHash      String?
  passwordUpdatedAt DateTime?
}

// ========== OTP ==========
model OtpRequest {
  id         String     @id @default(uuid())
  tid        String?
  purpose    OtpPurpose
  phone      String
  phoneMd5   String     @db.VarChar(32)
  otpHash    String
  expiresAt  DateTime
  verifiedAt DateTime?
  attempts   Int        @default(0)
  channel    String?

  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())

  // 你现在两个索引都可以；若要合并成复合索引，用下一行替换：
  // @@index([phoneMd5, purpose, expiresAt])
  @@index([phoneMd5])
  @@index([phone, purpose, expiresAt])
}

enum OtpPurpose {
  LOGIN
  REGISTER
  RESET_PASSWORD
  CHANGE_PHONE
  VERIFY_PHONE
}

// ========== 登录事件 ==========
model LoginEvent {
  id     String  @id @default(cuid())
  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  method      AuthMethod
  success     Boolean    @default(true)
  tid         String?
  ip          String?
  userAgent   String?
  countryCode Int?

  createdAt DateTime @default(now())

  @@index([userId, createdAt])
}

enum AuthMethod {
  PASSWORD
  OTP
  OAUTH
}

// ========== 地址 ==========
model Address {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  line1     String
  line2     String?
  city      String?
  state     String?
  country   String?
  zip       String?
  isDefault Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, isDefault])
}

// ========== 刷新令牌 ==========
model RefreshToken {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  tokenHash String   @unique
  expiresAt DateTime

  createdAt DateTime @default(now())

  @@index([userId, expiresAt])
}

// ========== 吊销的访问令牌（黑名单） ==========
model RevokedToken {
  jti       String   @id
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  reason    String?
  createdAt DateTime @default(now())

  @@index([userId, createdAt])
}
